import React, { useState, useEffect, useRef } from "react";
import leaves from "../assets/leaves.svg";
import sickLeave from "../assets/sick-leave.svg";
import vacationLeave from "../assets/vacation-leave.svg";
import search from "../assets/search-icon.svg";
import plus from "../assets/plus-icon.svg";
import LeaveListTable from "./LeaveListTable";
import closeIcon from "../assets/close-icon.svg";
const LeaveList = ({ showTint, setShowTint }) => {
  const [fullTimeBg, setFullTimeBg] = useState(true);
  const [customBg, setCustomBg] = useState(false);
  const [opendropdown, setOpenDropdown] = useState(false);

  const dropdownRef = useRef(null);

  const handleDropdown = () => {
    if (customBg) {
      setOpenDropdown(true);
    }
  };

  const handleOptionSelect = (option) => {
    console.log("Selected Option:", option);
    setOpenDropdown(false); // Close dropdown when an option is selected
  };

  const handleFullDayClick = () => {
    setFullTimeBg(true);
    setCustomBg(false);
    setOpenDropdown(false); // Close dropdown when switching to "Full Day"
  };

  const handleCustomClick = () => {
    setCustomBg(true);
    setFullTimeBg(false);
    handleDropdown();
  };
  const [showLeaveApplyModal, setShowLeaveApplyModal] = useState(false);
  const handleDeleteLeave = (id) => {
    const updatedLeaves = leaveData.filter((leave) => leave.id !== id);
    setLeaveData(updatedLeaves);
  };
  function handleTint() {
    setShowTint(true);
  }
  function handleCloseTint() {
    setShowTint(false);
  }
  function handleCloseModal() {
    setShowLeaveApplyModal(false);
  }
  function handleModal() {
    setShowLeaveApplyModal(true);
  }


  
  const [searchTerm, setSearchTerm] = useState("");
  const [filterStatus, setFilterStatus] = useState("");
  const [leaveData, setLeaveData] = useState([
    // Initial leave data
    {
      id: 1,
      type: "Sick Leave",
      from: "2024-12-10",
      to: "2024-12-10",
      reason: "Health Issue",
      status: "Approved",
    },
    {
      id: 2,
      type: "Casual Leave",
      from: "2024-12-10",
      to: "2024-12-10",
      reason: "Family Function",
      status: "Rejected",
    },
    {
      id: 3,
      type: "Annual Leave",
      from: "2024-12-15",
      to: "2024-12-20",
      reason: "Vacation",
      status: "Pending",
    },
    {
      id: 4,
      type: "Casual Leave",
      from: "2024-12-15",
      to: "2024-12-20",
      reason: "Health Issue",
      status: "Pending",
    },
    {
      id: 5,
      type: "Sick Leave",
      from: "2024-12-10",
      to: "2024-12-10",
      reason: "Health Issue",
      status: "Approved",
    },
    {
      id: 7,
      type: "Casual Leave",
      from: "2024-12-10",
      to: "2024-12-10",
      reason: "Function ",
      status: "Pending",
    },
  ]);

  const filteredLeaves = leaveData.filter((leave) => {
    const matchesSearch = leave.type
      .toLowerCase()
      .includes(searchTerm.toLowerCase());
    const matchesFilter = filterStatus === "" || leave.status === filterStatus;
    return matchesSearch && matchesFilter;
  });

  const totalLeaves = filteredLeaves.length;
  const sickLeaveCount = filteredLeaves.filter(
    (leave) => leave.type === "Sick Leave"
  ).length;
  const casualLeaveCount = filteredLeaves.filter(
    (leave) => leave.type === "Casual Leave"
  ).length;
  const vacationLeaveCount = filteredLeaves.filter(
    (leave) => leave.type === "Annual Leave"
  ).length;
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setOpenDropdown(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);
  return (
    <>
      <div className="main-container md:border w-[100%] h-[82vh] rounded-lg font-lato py-3 md:px-5 ">
        <div className="header">
          <h1 className="font-semibold text-lg">Leave List</h1>
        </div>

        <div className="grid mt-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3">
          <div className="total-leaves-available w-full flex items-center gap-3 bg-[#FAECEB] p-4 rounded-lg">
            <div className="img-container bg-[#FEA9AC] w-fit rounded-full p-2">
              <img src={leaves} className="w-6" />
            </div>
            <div>
              <h1 className="text-md">Total Leaves Available</h1>
              <p className="font-semibold">{totalLeaves}</p>
            </div>
          </div>

          <div className="sick-leave w-full flex items-center gap-3 bg-[#FCF4E9] p-4 rounded-lg">
            <div className="img-container bg-[#FFD59C] w-fit rounded-full p-2">
              <img src={sickLeave} className="w-6" />
            </div>
            <div>
              <h1 className="text-md">Sick Leave</h1>
              <p className="font-semibold">{sickLeaveCount}</p>
            </div>
          </div>

          <div className="casual-leave w-full flex items-center gap-3 bg-[#E2E9F3] p-4 rounded-lg">
            <div className="img-container bg-[#BFCFD7] w-fit rounded-full p-2">
              <img src={leaves} className="w-6" />
            </div>
            <div>
              <h1 className="text-md">Casual Leave</h1>
              <p className="font-semibold">{casualLeaveCount}</p>
            </div>
          </div>

          <div className="Vacation-leave w-full flex items-center gap-3 bg-[#E8F6FD] p-4 rounded-lg">
            <div className="img-container bg-[#2986CE] w-fit rounded-full p-2">
              <img src={vacationLeave} className="w-6" />
            </div>
            <div>
              <h1 className="text-md">Vacation Leave</h1>
              <p className="font-semibold">{vacationLeaveCount}</p>
            </div>
          </div>
        </div>

        <div className="search-container mt-4 lg:flex items-center justify-between">
          <div className="flex gap-3 items-center md:w-[70%] lg:w-[85%]">
            <div className="search-box w-[50%] gray-border rounded-lg flex gap-2 items-center p-2">
              <img src={search} className="w-5" />
              <input
                type="text"
                className="text-sm w-[100%] outline-none"
                placeholder="Search Leave..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
            <div className="filter-container text-gray-800 w-[50%]">
              <select
                className="gray-border outline-none max-sm:w-[100%] lg:w-[160px] xl:w-[200px] p-2 rounded-lg"
                value={filterStatus}
                onChange={(e) => setFilterStatus(e.target.value)}
              >
                <option value="">All</option>
                <option value="Approved">Approved</option>
                <option value="Rejected">Rejected</option>
                <option value="Pending">Pending</option>
              </select>
            </div>
          </div>
          <button
            onClick={() => {
              handleModal();
              handleTint();
            }}
            className="button cursor-pointer bg-[#2986CE] max-sm:w-[100%] max-sm:mt-2 sm:mt-3 md:lg-0 hover:bg-blue-500 text-white px-3 py-2 rounded-lg flex items-center gap-2"
          >
            <span className="flex items-center gap-2 m-auto">
              <img src={plus} className="w-4" />
              Apply Leave
            </span>
          </button>
        </div>

        <LeaveListTable
          leaves={filteredLeaves}
          setShowTint={setShowTint}
          handleDeleteLeave={handleDeleteLeave}
        />
      </div>
      {showLeaveApplyModal ? (
        <div className="leave-apply-modal  font-lato  text-[#222222] fixed top-[2%] sm:top-[1%] left-[50%] translate-x-[-50%] bg-white shadow-lg rounded-lg border sm:w-[95%]  md:w-[80%] h-[96vh] max-sm:w-[95%] max-sm:h-[95%]">
          <div className="header flex items-center justify-between p-3 border-bottom">
            <h1 className="text-[20px] text-[#222222]">Apply Leave</h1>
            <div
              onClick={() => {
                handleCloseModal();
                handleCloseTint();
              }}
              className="close-icon bg-[#D9D9D9] px-[10px] py-[10px] rounded-full w-fit cursor-pointer"
            >
              <img src={closeIcon} alt="" />
            </div>
          </div>
          <div className="form max-sm:mt-0  px-2 sm:p-6  ">
            <div className="form-header grid grid-cols-1 sm:grid-cols-2 gap-3">
              <div className="from-date">
                <label htmlFor="" className="text-md ">
                  From
                </label>{" "}
                <br />
                <input
                  type="date"
                  className="rounded-lg mt-1 outline-none border w-full border-gray-800 py-2 sm:py-2 px-4 text-md"
                />
              </div>
              <div className="to-date">
                <label htmlFor="" className=" text-md  ">
                  To
                </label>{" "}
                <br />
                <input
                  type="date"
                  className="rounded-lg mt-1 w-full outline-none border border-gray-800 py-2 sm:py-2 px-4 text-md "
                />
              </div>
            </div>
            <div className="form-body-content mt-2 sm:space-y-2">
              <label htmlFor="" className="text-md">
                Select Leave Type
              </label>{" "}
              <br />
              <select
                name=""
                id=""
                className="mt-1 border outline-none  w-[100%] bg-transparent sm:py-2 py-2 px-2 sm:px-4 text-md  rounded-lg border-gray-800"
              >
                <option value="">Select Leave Type</option>
                <option value="">Sick Leave</option>
                <option value="">Casual Leave</option>
                <option value="">Anual Leave</option>
              </select>
              <div className="time-period flex items-center gap-3 bg-gray-50 px-2 py-2 w-[300px] rounded-lg">
      <div className="full-time w-[50%]">
        <button
          onClick={handleFullDayClick}
          className={`w-[100%] px-3 py-1 rounded-lg ${
            fullTimeBg ? "bg-white shadow-sm text-black" : "text-gray-400"
          }`}
        >
          Full Day
        </button>
      </div>
      <div className="custom w-[50%] relative" ref={dropdownRef}>
        <button
          onClick={handleCustomClick}
          className={`px-3 py-1 w-[100%] rounded-lg ${
            customBg ? "bg-white shadow-sm text-black" : "text-gray-400"
          }`}
        >
          Custom
        </button>
        {opendropdown && (
          <div className="dropdown text-center shadow-lg absolute top-[35px] bg-white w-[100%]">
            <p
              className="cursor-pointer hover:bg-gray-100 p-2"
              onClick={() => handleOptionSelect("First Half")}
            >
              First Half
            </p>
            <p
              className="cursor-pointer hover:bg-gray-100 p-2"
              onClick={() => handleOptionSelect("Second Half")}
            >
              Second Half
            </p>
          </div>
        )}
      </div>
    </div>
              <div className="notes-section mt-4">
                <label htmlFor="" className="text-md ">
                  Notes
                </label>{" "}
                <br />
                <textarea className="w-[100%] outline-none border border-gray-800 rounded-lg px-2 sm:px-4 text-sm  py-2 sm:py-2 sm:mt-2"></textarea>
              </div>
              <label htmlFor="" className="text-md ">
                Notify
              </label>{" "}
              <br />
              <select
                name=""
                id=""
                className="border border-black w-[100%] px-2 sm:px-4 py-2 sm:py-2 text-md  rounded-lg mt-1"
              >
                <option value="">Select Employee</option>
                <option>Sarfaras Sir</option>
                <option value="">AnandhKumar Sir</option>
              </select>
              <div className="button-parent-section  relative ">
                <div className="button-section w-fit absolute  right-0  flex items-center gap-4 mt-3">
                  <button
                    onClick={() => {
                      handleCloseModal();
                      handleCloseTint();
                    }}
                    className="border border-gray-400 rounded-lg px-4 py-2 text-md font-semibold"
                  >
                    Cancel
                  </button>
                  <button className="rounded-lg px-4 py-2 border border-[#2986CE] text-md text-white bg-[#2986CE] font-semibold">
                    Request
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      ) : (
        ""
      )}
    </>
  );
};

export default LeaveList;
